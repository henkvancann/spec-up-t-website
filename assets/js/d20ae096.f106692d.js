"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[1122],{8419:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>a,contentTitle:()=>r,default:()=>d,frontMatter:()=>s,metadata:()=>l,toc:()=>c});var t=i(4848),o=i(8453);const s={sidebar_position:1},r="Intro",l={id:"various-roles/terminology-authors-guide/introduction",title:"Intro",description:"A terminology author focusses on term definitions covering concepts of the group he/she belongs to. By far the most terminology author will use links to other glossaries, that may or may not be based on Spec-Up-T. They simply copy links and make references in their own text. Which is perfectly fine.",source:"@site/docs/various-roles/terminology-authors-guide/introduction.md",sourceDirName:"various-roles/terminology-authors-guide",slug:"/various-roles/terminology-authors-guide/introduction",permalink:"/spec-up-t-website/docs/various-roles/terminology-authors-guide/introduction",draft:!1,unlisted:!1,editUrl:"https://github.com/blockchainbird/spec-up-t-website/tree/main/docs/various-roles/terminology-authors-guide/introduction.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Terminology Author Guide",permalink:"/spec-up-t-website/docs/category/terminology-author-guide"},next:{title:"Term References",permalink:"/spec-up-t-website/docs/various-roles/terminology-authors-guide/term-references"}},a={},c=[{value:"Use cases",id:"use-cases",level:2},{value:"A. Use definition",id:"a-use-definition",level:3},{value:"B. Amend a definition",id:"b-amend-a-definition",level:3},{value:"C. Create your own terminology using Spec-Up-T",id:"c-create-your-own-terminology-using-spec-up-t",level:3}];function h(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",ul:"ul",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"intro",children:"Intro"}),"\n",(0,t.jsx)(n.p,{children:"A terminology author focusses on term definitions covering concepts of the group he/she belongs to. By far the most terminology author will use links to other glossaries, that may or may not be based on Spec-Up-T. They simply copy links and make references in their own text. Which is perfectly fine."}),"\n",(0,t.jsxs)(n.p,{children:["Uses: a text editor. That is the minimal setup. When done he/she publishes the result on the web somewhere as a webpage, for example in ",(0,t.jsx)(n.code,{children:"html"}),"."]}),"\n",(0,t.jsx)(n.h2,{id:"use-cases",children:"Use cases"}),"\n",(0,t.jsx)(n.p,{children:"Besides a simple text editor, a terminology author could use an IDE, git and a browser extension, to edit Spec-Up markdown files for his/her specific context (mental model) in a version managed environment, authenticated, to write the concept and specification and offer this as a PR."}),"\n",(0,t.jsx)(n.p,{children:"He/she uses browser extensions to check technical consistency of the links in the text and harvests a personal collection of term definitions. Specification author terms that cover those concepts."}),"\n",(0,t.jsx)(n.p,{children:"These are example uses that we will step-by-step elaborate on."}),"\n",(0,t.jsx)(n.h3,{id:"a-use-definition",children:"A. Use definition"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"Go to the Spec-Up-T glossary, where the definition is listed"}),"\n",(0,t.jsx)(n.li,{children:"Copy the persistent URL"}),"\n",(0,t.jsx)(n.li,{children:"Paste the persistent URL, save and publish"}),"\n"]}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"at face value"}),"\n",(0,t.jsx)(n.li,{children:"in a link"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Why is a Spec-Up-T based glossary interesting to link to? -> version management!"}),"\n",(0,t.jsx)(n.h3,{id:"b-amend-a-definition",children:"B. Amend a definition"}),"\n",(0,t.jsx)(n.p,{children:"Follow A."}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"Add text to the definition, save and publish"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"How will you maintain this definition? How will you cooperate with others on the definition or a whole list of definitions. Just try to imagine how this play out."}),"\n",(0,t.jsx)(n.p,{children:"This is why Spec-Up-T came to be."}),"\n",(0,t.jsx)(n.h3,{id:"c-create-your-own-terminology-using-spec-up-t",children:"C. Create your own terminology using Spec-Up-T"}),"\n",(0,t.jsx)(n.p,{children:"Why Spec-Up-T? -> version management"}),"\n",(0,t.jsx)(n.p,{children:"Follow A. en B. above."}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"Get a git-based version management environment, create a repo there"}),"\n",(0,t.jsx)(n.li,{children:"Install Spec-Up-T"}),"\n",(0,t.jsx)(n.li,{children:"etc."}),"\n"]})]})}function d(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(h,{...e})}):h(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>r,x:()=>l});var t=i(6540);const o={},s=t.createContext(o);function r(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);